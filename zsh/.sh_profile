#!/usr/bin/env sh

# Remove duplicated PATH
# if [[ $SHELL = 'zsh' ]]; then
#   typeset -U PATH
# fi

# export TERM=xterm-256color

export EDITOR=vim
export VISUAL=vim

source $HOME/code/dotfiles/install.sh

if [ -z "$XDG_CONFIG_HOME" ]; then
  export XDG_CONFIG_HOME=$HOME/.config
fi

# bindkeys, enable it for zprezto usage
# bindkey "^R" history-incremental-search-backward

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# openssl@1.1
export LDFLAGS="-L/usr/local/opt/openssl@1.1/lib"
export CPPFLAGS="-I/usr/local/opt/openssl@1.1/include"
export PKG_CONFIG_PATH="/usr/local/opt/openssl@1.1/lib/pkgconfig"

# go-lang
export GOPATH=$HOME/go-workspace
export GOROOT=/usr/local/opt/go/libexec
export PATH=$PATH:$GOPATH/bin:$GOROOT/bin

export PATH=/usr/local/opt/grep/libexec/gnubin:/usr/local/sbin:$PATH
export PATH=/usr/local/opt/coreutils/libexec/gnubin:$PATH

# doom-emacs
export PATH=$HOME/.emacs.d/bin:$PATH

# psql
export PGDATA=/usr/local/var/postgres
export PGHOST=localhost

# flutter
export PATH=$PATH:$HOME/sdk/flutter/bin

# shopt -s promptvars

# zlib
export LDFLAGS="${LDFLAGS} -L/usr/local/opt/zlib/lib"
export CPPFLAGS="${CPPFLAGS} -I/usr/local/opt/zlib/include"
export PKG_CONFIG_PATH="${PKG_CONFIG_PATH} /usr/local/opt/zlib/lib/pkgconfig"

# libffi
export LDFLAGS="${LDFLAGS} -L/usr/local/opt/libffi/lib"
export CPPFLAGS="${CPPFLAGS} -I/usr/local/opt/libffi/include"
export PKG_CONFIG_PATH="${PKG_CONFIG_PATH} /usr/local/opt/libffi/lib/pkgconfig"

# jekyll
export PATH="/usr/local/opt/ruby/bin:$PATH"
export PATH="/usr/local/lib/ruby/gems/2.7.0/bin:$PATH"

export PATH="/usr/local/opt/texinfo/bin:$PATH"

# rust-lang
export PATH="$HOME/.cargo/bin:$PATH"

# ssh to host by hostname :)
# TODO: check $SHELL
zstyle ':completion:*:(ssh|scp|ftp|sftp):*' hosts $hosts
zstyle ':completion:*:(ssh|scp|ftp|sftp):*' users $users

# fzf

# fzf's command
export FZF_DEFAULT_COMMAND="fd"
# # CTRL-T's command
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
# # ALT-C's command
export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND --type d"

export FZF_DEFAULT_OPTS="--height=80%"

# --prompt='∼ ' --pointer='▶' --marker='✓'
# --bind '?:toggle-preview'
# --multi
# --preview '([[ -f {} ]] && (bat --style=numbers --color=always {} || cat {})) || ([[ -d {} ]] && (tree -C {} | less)) || echo {} 2> /dev/null | head -200'
# --color='hl:148,hl+:154,pointer:032,marker:010,bg+:237,gutter:008'
# --bind 'ctrl-y:execute-silent(echo {+} | pbcopy)'
# --bind 'ctrl-e:execute(echo {+} | xargs -o vim)'
# --bind 'ctrl-v:execute(code {+})'
# "

_fzf_compgen_path() {
    fd . "$1"
}
_fzf_compgen_dir() {
    fd --type d . "$1"
}

# aliases
if [ -f ~/.sh_aliases ]; then
  . ~/.sh_aliases
fi

# pip
export PATH="$HOME/.local/bin":$PATH

# pew
# source $(pew shell_config)

# pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null; then
  eval "$(pyenv init -)"
fi

eval "$(pyenv virtualenv-init -)"

# Yank to the system clipboard
function vi-yank-xclip {
    zle vi-yank
   echo "$CUTBUFFER" | pbcopy -i
}

zle -N vi-yank-xclip
bindkey -M vicmd 'y' vi-yank-xclip

# zprezto
# export ZDOTDIR=$HOME

# [pure](https://github.com/sindresorhus/pure)
# fpath+=$HOME/.zsh/pure
# autoload -U promptinit; promptinit
# prompt pure
