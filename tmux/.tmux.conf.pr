# vim: ft=conf
#
# ‚ñë‚ñÄ‚ñà‚ñÄ‚ñë‚ñà‚ñÑ‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñë
# ‚ñë‚ñë‚ñà‚ñë‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñÑ‚ñÄ‚ñÑ‚ñë‚ñë
# ‚ñë‚ñë‚ñÄ‚ñë‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñë

# change prefix to backtick
unbind C-b
set-option -g prefix C-a
bind C-a send-prefix

# shell
set -g default-command $SHELL
set -g default-shell $SHELL

# start with window 1 (instead of 0)
set -g base-index 1

# start with pane 1
set -g pane-base-index 1

# renumber windows index
set -g renumber-windows on

# keep window names fixed
set-option -g allow-rename off

# rename window on creation
set-hook -g after-new-window 'command-prompt -I "" "rename-window '%%'"'

# screen mode
set -g default-terminal "screen-256color"

# source config file
bind r source-file ~/.tmux.conf

# history
set -g history-limit 4096

# mouse
set -g mouse off

# # allow terminal scrolling
# set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# vim style copy paste mode
#unbind [
#bind Escape copy-mode
#bind-key -T copy-mode-vi 'v' send -X begin-selection
#bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel \
#  "/usr/bin/xsel -i -p > /dev/null"\; \
#  display-message "copied selection to primary clipboard"

#unbind [
#bind Escape copy-mode
#unbind i
#bind i paste-buffer
#bind-key -Tcopy-mode-vi 'v' send -X begin-selection
##bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection primary'
#bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel 'xsel -i >/dev/null'

# use vi mode
setw -g mode-keys vi
set -g status-keys vi

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'


# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from


# -- navigation ----------------------------------------------------------------

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# split current window horizontally
bind - split-window -v
# split current window vertically
bind _ split-window -h

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# pane switching
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l
bind l select-pane -R

# colon :
bind : command-prompt

# panes
set -g pane-border-style fg=#2e3440
set -g pane-active-border-style fg=colour6

# messaging
set -g message-style fg=white,bg=colour5
set -g message-command-style fg=colour0,bg=colour1

# window mode
setw -g mode-style fg=colour0,bg=colour6

# resizing
setw -g aggressive-resize on

# status bar
set -g status-justify left
set -g status-style bg=terminal
set -g status-fg colour7
set -g status-interval 10
set -g status-right-length 100
setw -g window-status-separator " "

setw -g window-status-format "#[bg=colour241,fg=colour0] #I #[bg=colour241,fg=colour0]#W #[bg=colour0,fg=colour241]‚ñì‚ñë"
setw -g window-status-current-format "#[bg=colour14,fg=colour0] #I #[bg=colour14,fg=colour0]#W #{?window_zoomed_flag,üîç,}#[bg=colour0,fg=colour14]‚ñì‚ñë"

set-option -g status-right '#[bg=colour0,fg=colour237]‚ñë‚ñì#[bg=colour236,fg=colour15]#{bond_device}#{online_status}#[bg=colour237,fg=colour243] %Y%m#[bg=colour237,fg=colour3]%d#[fg=default]-#[fg=colour10]%u #[fg=colour7]%H%M #[bg=white,fg=colour237]‚ñì#[default]'
set-option -g status-left '#{tmux_mode_indicator}‚ñì‚ñë'


# online and offline icon for tmux-online-status
# set -g @online_icon "#[bg=colour237,fg=colour2]‚ñë‚ñì‚ñà#[bg=colour2,fg=black]online#[bg=colour237,fg=colour2]‚ñà‚ñì‚ñë#[default]"
# set -g @offline_icon "#[bg=colour237,fg=colour1]‚ñë‚ñì‚ñà#[bg=colour1,fg=white]offline#[bg=colour237,fg=colour1]‚ñà‚ñì‚ñë#[default]"
set -g @online_icon "#[bg=colour237,fg=colour2]‚ñë‚ñì#[bg=colour2,fg=black]online#[bg=colour237,fg=colour2]‚ñì‚ñë#[default]"
set -g @offline_icon "#[bg=colour237,fg=colour1]‚ñë‚ñì#[bg=colour1,fg=white]offline#[bg=colour237,fg=colour1]‚ñì‚ñë#[default]"

# device names for tmux-bond-device
set -g @ethernet "#[bg=colour237,fg=colour7] hardwire #[default]"
set -g @wifi "#[bg=colour237,fg=colour7] airborne #[default]"

# loud or quiet?
set-option -g visual-activity on
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

# tmux clock
set -g clock-mode-colour colour6

# escape time (for vim)
set -sg escape-time 0

# some key-binding changes
bind x kill-pane
bind X next-layout
bind Z previous-layout

# toggle status bar visibility
bind t set status

# zoom indicator
# $(which perl) -p -i -e "s/'#\{\?window_zoomed_flag,Unzoom,Zoom\}' 'z' \{resize-pane -$/'#{?window_zoomed_flag,Unzoom,Zoom}' 'z' {resize-pane -Z}\"/g" "$cfg"

# plugins
# `mkdir -p ~/.tmux/plugins/ ; git clone 'https://github.com/tmux-plugins/tpm' ~/.tmux/plugins/tpm`
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'schasse/tmux-jump'
set -g @plugin 'MunifTanjim/tmux-mode-indicator'

# # see: toggle on/off all keybindings ¬∑ Issue #237 ¬∑ tmux/tmux - https://github.com/tmux/tmux/issues/237
# # Also, change some visual styles when window keys are off
# bind-key -T root F12  \
# 	set-option -g prefix None \;\
# 	setw -g window-status-current-format "#[bg=colour5,fg=colour0] #I #[bg=colour5,fg=colour0]#W #[bg=colour0,fg=colour5]‚ñì‚ñë" \;\
# 	refresh-client -S

# bind-key -T root F11 \
# 	set-option -g prefix ` \;\
# 	bind ` send-prefix \;\
# 	setw -g window-status-current-format "#[bg=colour14,fg=colour0] #I #[bg=colour14,fg=colour0]#W #[bg=colour0,fg=colour14]‚ñì‚ñë" \;\
# 	refresh-client -S

# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# tmux-jump
set -g @jump-key '/'

# tmux-mode-indicator
set -g @mode_indicator_empty_prompt '‚ùê CHU '

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
